openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/categories/:
    get:
      operationId: listCategories
      description: "\u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\
        \u0438\u0435 \u0434\u043B\u044F \u043C\u043E\u0434\u0435\u043B\u0438 Category."
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/categories/{id}/:
    get:
      operationId: retrieveCategory
      description: "\u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\
        \u0438\u0435 \u0434\u043B\u044F \u043C\u043E\u0434\u0435\u043B\u0438 Category."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041A\u0430\u0442\u0435\
          \u0433\u043E\u0440\u0438\u044F."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/products/:
    get:
      operationId: listProducts
      description: "\u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\
        \u0438\u0435 \u0434\u043B\u044F \u043C\u043E\u0434\u0435\u043B\u0438 Product."
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/v1/products/{id}/:
    get:
      operationId: retrieveProduct
      description: "\u041F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043B\u0435\u043D\
        \u0438\u0435 \u0434\u043B\u044F \u043C\u043E\u0434\u0435\u043B\u0438 Product."
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u041F\u0440\u043E\u0434\
          \u0443\u043A\u0442."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
      tags:
      - api
  /api/v1/cart/:
    get:
      operationId: listCarts
      description: "\u041F\u0435\u0440\u0435\u043E\u043F\u0440\u0435\u0434\u0435\u043B\
        \u044F\u0435\u043C GET /cart/ \u0434\u043B\u044F \u043F\u043E\u043B\u0443\u0447\
        \u0435\u043D\u0438\u044F 1 \u043E\u0431\u044A\u0435\u043A\u0442\u0430."
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cart'
          description: ''
      tags:
      - api
    post:
      operationId: createCart
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
      tags:
      - api
  /api/v1/cart/{id}/:
    get:
      operationId: retrieveCart
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
      tags:
      - api
    put:
      operationId: updateCart
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCart
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCart
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/cart/add/:
    post:
      operationId: addProductCartItemAction
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItemAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItemAction'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItemAction'
          description: ''
      tags:
      - api
  /api/v1/api-token-auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api
  /api/v1/cart/update/:
    patch:
      operationId: updateProductCartItemAction
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemAction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartItemAction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartItemAction'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartItemAction'
          description: ''
      tags:
      - api
  /api/v1/cart/clear/:
    delete:
      operationId: clearCartCart
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/cart/remove/:
    delete:
      operationId: removeProductCartItemAction
      description: "Viewset \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B\
        \ \u0441 \u043A\u043E\u0440\u0438\u0437\u043D\u043E\u0439.\n\u041F\u0440\u043E\
        \u0441\u043C\u043E\u0442\u0440, \u0434\u043E\u0431\u0430\u0432\u043B\u0435\
        \u043D\u0438\u0435, \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435\
        , \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0442\u043E\u0432\u0430\
        \u0440\u043E\u0432."
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
        slug:
          type: string
          maxLength: 256
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          format: binary
        subcategories:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              name:
                type: string
                maxLength: 256
              slug:
                type: string
                maxLength: 256
                pattern: ^[-a-zA-Z0-9_]+$
              image:
                type: string
                format: binary
            required:
            - name
            - slug
            - image
          readOnly: true
      required:
      - name
      - slug
      - image
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
        slug:
          type: string
          maxLength: 256
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        images:
          type: string
          readOnly: true
        subcategory:
          type: string
          readOnly: true
        category:
          type: string
          readOnly: true
      required:
      - name
      - slug
      - price
    Cart:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              product:
                type: object
                properties:
                  id:
                    type: integer
                    readOnly: true
                  name:
                    type: string
                    maxLength: 256
                  slug:
                    type: string
                    maxLength: 256
                    pattern: ^[-a-zA-Z0-9_]+$
                  description:
                    type: string
                  price:
                    type: string
                    format: decimal
                    multipleOf: 0.01
                    maximum: 100000000
                    minimum: -100000000
                  images:
                    type: string
                    readOnly: true
                  subcategory:
                    type: string
                    readOnly: true
                  category:
                    type: string
                    readOnly: true
                required:
                - name
                - slug
                - price
                readOnly: true
              quantity:
                type: integer
                maximum: 9999
                minimum: 1
              total_price:
                type: string
                readOnly: true
          readOnly: true
        total_price:
          type: string
          readOnly: true
    CartItemAction:
      type: object
      properties:
        product_id:
          type: integer
          writeOnly: true
        quantity:
          type: integer
          maximum: 9999
          minimum: 1
      required:
      - product_id
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
